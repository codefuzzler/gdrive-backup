<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="28698390-3caf-455a-bba4-7b165ff968c2" name="Default Changelist" comment="Implemented argument to Config parsing.&#10;Implemented google drive api libs.&#10;Implemented parsing credentials.json.&#10;Implemented OAuth2 via provided link.&#10;srcFolder gets archived with tar and compressed with gunzip and correctly named with descriptor and time. Errors should be handled if occuring.&#10;Implemented auth, connect, createdir and fileupload to google drive. First release candidate.">
      <change afterPath="$PROJECT_DIR$/LICENCE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/go" />
  <component name="Git.Rebase.Settings">
    <option name="NEW_BASE" value="origin/master" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1ldtYinzgOgiXsLI8qNtmUjcb3m" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go Application" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="preferences.sourceCode.Go" />
  </component>
  <component name="RunManager" selected="Go Build.go build gdrive-backup">
    <configuration name="go build gdrive-backup (NO ARGS)" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="gdrive-backup" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
        </ENTRIES>
      </EXTENSION>
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="gdrive-backup" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build gdrive-backup" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="gdrive-backup" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-o bin/gdrive-backup" />
      <parameters value="--src ./testsrc --dest /test-backup --tag mytag" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
        </ENTRIES>
      </EXTENSION>
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="gdrive-backup" />
      <directory value="$PROJECT_DIR$" />
      <output_directory value="bin/" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build gdrive-backup (NO ARGS)" />
      <item itemvalue="Go Build.go build gdrive-backup" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build gdrive-backup" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Implemented argument to Config parsing.&#10;Implemented google drive api libs.&#10;srcFolder gets archived with tar and compressed with gunzip and correctly named with descriptor and time. Errors should be handled if occuring." />
    <MESSAGE value="Implemented argument to Config parsing.&#10;Implemented google drive api libs.&#10;Implemented parsing credentials.json.&#10;Implemented OAuth2 via provided link.&#10;srcFolder gets archived with tar and compressed with gunzip and correctly named with descriptor and time. Errors should be handled if occuring.&#10;Implemented auth, connect, createdir and fileupload to google drive. First release candidate." />
    <option name="LAST_COMMIT_MESSAGE" value="Implemented argument to Config parsing.&#10;Implemented google drive api libs.&#10;Implemented parsing credentials.json.&#10;Implemented OAuth2 via provided link.&#10;srcFolder gets archived with tar and compressed with gunzip and correctly named with descriptor and time. Errors should be handled if occuring.&#10;Implemented auth, connect, createdir and fileupload to google drive. First release candidate." />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>